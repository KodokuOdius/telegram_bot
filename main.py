from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import (InlineKeyboardButton, InlineKeyboardMarkup,
                           KeyboardButton, ReplyKeyboardMarkup,
                           ReplyKeyboardRemove)

from config.bot import DP
from config.database import DB


class RegUser(StatesGroup):
    name = State()



@DP.message_handler(commands=['start'])
async def acho(event: types.Message):
    NameKey = (
        ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        .add(KeyboardButton("üòÅ –û—Å—Ç–∞–≤–∏—Ç—å"))
    )

    result = DB.request(f"select * from tg_user where user_id = {event.from_user.id}", "result")
    if result == 0:
        await event.answer(
            "–ü—Ä–∏–≤–µ—Ç, –≤–∏–∂—É —Ç—ã —É –º–µ–Ω—è –≤–ø–µ—Ä–≤—ã–µ, –¥–∞–≤–∞–π –ø—Ä–æ–π–¥—ë–º –º–∞–ª–µ–Ω—å–∫—É—é —Ä–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏—é –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É –æ —Å–µ–±–µ.\n" +
            "–í–≤–µ–¥–∏ —Å–≤–æ–π –∂–µ–ª–∞–µ–º—ã–π <b><i>–Ω–∏–∫–Ω–µ–π–º</i></b>, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–µ, –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, " + 
            "—á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –∏–∑ Telegram",
            reply_markup=NameKey
        )

        await RegUser.name.set()

    else:
        user = DB.request(f"select * from tg_user where user_id = {event.from_user.id}", "fetchall")

        await event.answer(
            f"–ü—Ä–∏–≤–µ—Ç, {user['nick_name']}\n" +
            "–ì–æ—Ç–æ–≤ —Å–Ω–æ–≤–æ –ø–æ–∏–≥—Ä–∞—Ç—å? –Ω–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É)"
        )



@DP.message_handler(state=RegUser.name)
async def test(event: types.Message, state: FSMContext):
    if event.text == "üòÅ –û—Å—Ç–∞–≤–∏—Ç—å":
        DB.request(f"insert into tg_user (user_id, nick_name) values ({event.from_user.id}, '{event.from_user.full_name}')")
        
        await event.answer(
            "–û—Ç–ª–∏—á–Ω–æ!\n" +
            "–Ø —Ç–µ–±—è –∑–∞–ø–æ–º–Ω–∏–ª)\n" +
            "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –≤–æ—Ç –∫–æ–º–∞–Ω–¥–∞ /profile",
            reply_markup=ReplyKeyboardRemove()
        )
        
        await state.finish()
    
    name = event.text

    if len(name) > 64:
        await event.reply(
            r"–ò–∑–≤–∏–Ω–∏ {{{(>_<)}}}\n" +
            "–ú–∞–∫—Å–∏–º—É–º 64 —Å–∏–º–≤–æ–ª–∞)"
        )
    else:
        DB.request(f"insert into tg_user (user_id, nick_name) values ({event.from_user.id}, '{name}')")
        
        await event.answer(
            "–û—Ç–ª–∏—á–Ω–æ!\n" +
            "–Ø —Ç–µ–±—è –∑–∞–ø–æ–º–Ω–∏–ª)\n" +
            "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –≤–æ—Ç –∫–æ–º–∞–Ω–¥–∞ /profile",
            reply_markup=ReplyKeyboardRemove()
        )
        
        await state.finish()
        





@DP.message_handler()
async def qwerty(event: types.Message):
    await event.reply("–ü—É—Å—Ç–∞—è –ª–æ–≤—É—à–∫–∞")










if __name__ == '__main__':
    from aiogram import executor

    from config.admin import shutdown, starting

    executor.start_polling(
        DP, 
        on_startup=starting, 
        on_shutdown=shutdown
    )
